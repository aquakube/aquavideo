apiVersion: apps/v1
kind: Deployment
metadata:
  name: aquavid
  namespace: video
  labels:
    app.kubernetes.io/name: aquavid
    app.kubernetes.io/version: 0.6.0
    app.kubernetes.io/component: video
    app.kubernetes.io/part-of: video
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: aquavid
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aquavid
        app.kubernetes.io/version: 0.6.0
    spec:
      serviceAccountName: video-controller
      imagePullSecrets:
      - name: k8s-ecr-login-renew-docker-secret
      containers:
      - name: server
        image: 456087932636.dkr.ecr.us-west-2.amazonaws.com/aquavid:0.6.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - timeout 2 nc -z kafka-kafka-bootstrap.kafka.svc.cluster.local 9092 && nc -z kube-prometheus-kube-prome-prometheus.monitoring.svc.cluster.local 9090
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: CAMERA_MAP
            valueFrom:
              configMapKeyRef:
                name: camera-map
                key: map
          - name: GROUP_MAP
            valueFrom:
              configMapKeyRef:
                name: camera-map
                key: groups
          - name: KAFKA_BROKERS
            value: kafka-kafka-bootstrap.kafka.svc.cluster.local:9092
          - name: KAFKA_EVENTS_TOPIC
            value: aquavid.events
          - name: PROMETHEUS_URL
            value: http://kube-prometheus-kube-prome-prometheus.monitoring.svc.cluster.local:9090